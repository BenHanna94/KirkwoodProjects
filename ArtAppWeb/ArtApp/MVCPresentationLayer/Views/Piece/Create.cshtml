@model DataObjects.Piece



    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
<div class="form-horizontal">
    <h4>Check the Project Name dropdown before submitting!</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!--Consider making this a dropdown or autopopulating field-->
    <div class="form-group">
        @Html.LabelFor(model => model.ProjectID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ProjectID,
            new SelectList((IEnumerable<DataObjects.Project>)ViewBag.ProjectList, "ProjectID", "Name"),
            new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--Consider making this a dropdown-->
    <div class="form-group">
        @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.UserID,
            new SelectList((IEnumerable<DataObjects.User>)ViewBag.UserList, "UserID", "Name"),
            new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Stage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Stage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Stage, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--
        <div class="form-group">
            @Html.LabelFor(model => model.Complete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Complete)
                    @Html.ValidationMessageFor(model => model.Complete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Compensation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Compensation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Compensation, "", new { @class = "text-danger" })
            </div>
        </div>
    -->
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }
    
<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.ProjectID })
</div>

